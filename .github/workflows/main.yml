# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-code:
    name: Build code
    runs-on: ubuntu-latest
    container: crystallang/crystal
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Build shards
        run:  shards build

  build-docker-image:
    name: Build docker image
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v1

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR (push)
      if: ${{ github.event_name == 'push' }}
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: cerebrum
      run: |
        IMAGE_TAG=${GITHUB_REF#refs/heads/}
        SHA=${{ github.sha }}
        SHA=${SHA:0:6}
        docker build . \
          --tag=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG \
          --tag=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG-$SHA
        docker push $ECR_REGISTRY/$ECR_REPOSITORY
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
    
    - name: Build image (pull request)
      id: just-build
      if: ${{ github.event_name == 'pull_request' }}
      run: docker build .

#  unit-tests:
#    name: Unit tests
#    runs-on: ubuntu-latest
#    container: crystallang/crystal
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v1      
#      - name: Shards installing
#        run:  shards install 
#      - name: Crystal spec running
#        run:  crystal spec 
#      - name: Ameba
#        run:  crystal bin/ameba.cr
